// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String
  recipe Recipe[]
  comments Store_comments[]
  active Boolean @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Recipe {
  id    Int     @id @default(autoincrement())
  name  String
  description String
  materials  Recipe_material[]
  servings  Int
  video_link  String
  tags  Recipe_tags[]
  steps Recipe_steps[]
  user_id Int 
  user User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  deleted_at DateTime?
}

model Recipe_material {
  id    Int     @id @default(autoincrement())
  name  String
  number Int
  unit  String
  recipe_id Int
  recipe      Recipe  @relation(fields: [recipe_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Recipe_tags {
  id    Int     @id @default(autoincrement())
  category Int
  recipe_id Int
  recipe      Recipe  @relation(fields: [recipe_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Recipe_steps {
  id    Int     @id @default(autoincrement())
  step  Int
  image_link  String?
  description String
  recipe_id   Int
  recipe     Recipe  @relation(fields: [recipe_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Store_comments {
  id    Int     @id @default(autoincrement())
  store_name String
  store_address String
  user_id  Int
  user User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  comment String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}
